"""Created job and artifact table

Revision ID: 6dce8d020c1e
Revises: 4594d60b5608
Create Date: 2025-09-29 12:20:48.748210

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6dce8d020c1e"
down_revision: Union[str, Sequence[str], None] = "4594d60b5608"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "artifacts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("public_id", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_artifacts_public_id"), "artifacts", ["public_id"], unique=True
    )
    op.create_table(
        "jobs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("public_id", sa.String(length=32), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("job_type", sa.String(), nullable=False),
        sa.Column(
            "state",
            sa.Enum("QUEUED", "RUNNING", "SUCCEEDED", "FAILED", name="job_state_enum"),
            nullable=False,
        ),
        sa.Column("attempts", sa.Integer(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("finished_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("last_error", sa.String(), nullable=True),
        sa.Column("error_kind", sa.String(), nullable=True),
        sa.Column(
            "error_payload", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("idempotency_key", sa.String(length=32), nullable=False),
        sa.Column("request_hash", sa.String(), nullable=False),
        sa.Column(
            "result_kind",
            sa.Enum("ARTIFACT", "ENTITY", name="ck_result_kind", native_enum=False),
            nullable=True,
        ),
        sa.Column("artifact_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["artifact_id"],
            ["artifacts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_jobs_idempotency_key"), "jobs", ["idempotency_key"], unique=True
    )
    op.create_index(op.f("ix_jobs_public_id"), "jobs", ["public_id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_jobs_public_id"), table_name="jobs")
    op.drop_index(op.f("ix_jobs_idempotency_key"), table_name="jobs")
    op.drop_table("jobs")
    op.drop_index(op.f("ix_artifacts_public_id"), table_name="artifacts")
    op.drop_table("artifacts")
    # Alembic doesn't drop enums, these had to be added manually
    sa.Enum("QUEUED", "RUNNING", "SUCCEEDED", "FAILED", name="job_state_enum").drop(
        op.get_bind()
    )
    sa.Enum("ARTIFACT", "ENTITY", name="ck_result_kind", native_enum=False).drop(
        op.get_bind()
    )
    # ### end Alembic commands ###
