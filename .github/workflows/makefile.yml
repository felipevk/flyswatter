name: Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DB_HOST: localhost
  DB_USERNAME: app
  DB_PASSWORD: app123
  APP_ENV: test
  DB_PORT: 5432
  POSTGRES_DB: appdb_test
  DB_DRIVER: postgresql+psycopg
  JWT_ALG: HS256
  JWT_SECRET: 17a28c28c4ffd960418bea07cc99ea9f8939855cd183cbedeac32e9c8992bff9
  ACCESS_TTL_MIN: 10
  REFRESH_TTL_DAYS: 7

jobs:
  run-tests:

    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: appdb_test    
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app123
          
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Install Poetry
      run: pip install --no-cache-dir poetry

    - name: Install dependencies
      run: poetry config virtualenvs.create false | poetry install --no-interaction --no-ansi

    - name: Init database
      run: python app/db/create_database.py

    - name: Run pytest
      run: poetry run pytest -q
